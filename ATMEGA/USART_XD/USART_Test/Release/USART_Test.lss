
USART_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000178  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000178  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080006e  0080006e  0000021a  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e7       	ldi	r30, 0x78	; 120
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  8a:	0c 94 ba 00 	jmp	0x174	; 0x174 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <UART_TxChar>:
  92:	5d 9b       	sbis	0x0b, 5	; 11
  94:	fe cf       	rjmp	.-4      	; 0x92 <UART_TxChar>
  96:	8c b9       	out	0x0c, r24	; 12
  98:	08 95       	ret

0000009a <UART_SendString>:
  9a:	20 e0       	ldi	r18, 0x00	; 0
  9c:	04 c0       	rjmp	.+8      	; 0xa6 <UART_SendString+0xc>
  9e:	5d 9b       	sbis	0x0b, 5	; 11
  a0:	fe cf       	rjmp	.-4      	; 0x9e <UART_SendString+0x4>
  a2:	ec b9       	out	0x0c, r30	; 12
  a4:	2f 5f       	subi	r18, 0xFF	; 255
  a6:	fc 01       	movw	r30, r24
  a8:	e2 0f       	add	r30, r18
  aa:	f1 1d       	adc	r31, r1
  ac:	e0 81       	ld	r30, Z
  ae:	ee 23       	and	r30, r30
  b0:	b1 f7       	brne	.-20     	; 0x9e <UART_SendString+0x4>
  b2:	08 95       	ret

000000b4 <main>:
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	10 bc       	out	0x20, r1	; 32
  ba:	83 e3       	ldi	r24, 0x33	; 51
  bc:	89 b9       	out	0x09, r24	; 9
  be:	88 e1       	ldi	r24, 0x18	; 24
  c0:	8a b9       	out	0x0a, r24	; 10
  c2:	8e e8       	ldi	r24, 0x8E	; 142
  c4:	80 bd       	out	0x20, r24	; 32
  c6:	c8 ec       	ldi	r28, 0xC8	; 200
  c8:	d0 e0       	ldi	r29, 0x00	; 0
  ca:	80 e6       	ldi	r24, 0x60	; 96
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 4d 00 	call	0x9a	; 0x9a <UART_SendString>
  d2:	80 e1       	ldi	r24, 0x10	; 16
  d4:	97 e2       	ldi	r25, 0x27	; 39
  d6:	fe 01       	movw	r30, r28
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x24>
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	d9 f7       	brne	.-10     	; 0xd6 <main+0x22>
  e0:	f4 cf       	rjmp	.-24     	; 0xca <main+0x16>

000000e2 <UART_RxChar>:
  e2:	5f 9b       	sbis	0x0b, 7	; 11
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <UART_RxChar>
  e6:	8c b1       	in	r24, 0x0c	; 12
  e8:	08 95       	ret

000000ea <UART_GetString>:
  ea:	0f 93       	push	r16
  ec:	1f 93       	push	r17
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	64 97       	sbiw	r28, 0x14	; 20
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	f8 94       	cli
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	0f be       	out	0x3f, r0	; 63
 100:	cd bf       	out	0x3d, r28	; 61
 102:	5f 9b       	sbis	0x0b, 7	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <UART_GetString+0x18>
 106:	9c b1       	in	r25, 0x0c	; 12
 108:	19 82       	std	Y+1, r1	; 0x01
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	9e 01       	movw	r18, r28
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
 112:	08 c0       	rjmp	.+16     	; 0x124 <UART_GetString+0x3a>
 114:	5f 9b       	sbis	0x0b, 7	; 11
 116:	fe cf       	rjmp	.-4      	; 0x114 <UART_GetString+0x2a>
 118:	f9 01       	movw	r30, r18
 11a:	e8 0f       	add	r30, r24
 11c:	f1 1d       	adc	r31, r1
 11e:	90 83       	st	Z, r25
 120:	9c b1       	in	r25, 0x0c	; 12
 122:	8f 5f       	subi	r24, 0xFF	; 255
 124:	9d 30       	cpi	r25, 0x0D	; 13
 126:	b1 f7       	brne	.-20     	; 0x114 <UART_GetString+0x2a>
 128:	8e 01       	movw	r16, r28
 12a:	0f 5f       	subi	r16, 0xFF	; 255
 12c:	1f 4f       	sbci	r17, 0xFF	; 255
 12e:	f8 01       	movw	r30, r16
 130:	e8 0f       	add	r30, r24
 132:	f1 1d       	adc	r31, r1
 134:	10 82       	st	Z, r1
 136:	c8 01       	movw	r24, r16
 138:	6a e6       	ldi	r22, 0x6A	; 106
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	0e 94 af 00 	call	0x15e	; 0x15e <strcat>
 140:	10 93 6f 00 	sts	0x006F, r17
 144:	00 93 6e 00 	sts	0x006E, r16
 148:	64 96       	adiw	r28, 0x14	; 20
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	f8 94       	cli
 14e:	de bf       	out	0x3e, r29	; 62
 150:	0f be       	out	0x3f, r0	; 63
 152:	cd bf       	out	0x3d, r28	; 61
 154:	cf 91       	pop	r28
 156:	df 91       	pop	r29
 158:	1f 91       	pop	r17
 15a:	0f 91       	pop	r16
 15c:	08 95       	ret

0000015e <strcat>:
 15e:	fb 01       	movw	r30, r22
 160:	dc 01       	movw	r26, r24
 162:	0d 90       	ld	r0, X+
 164:	00 20       	and	r0, r0
 166:	e9 f7       	brne	.-6      	; 0x162 <strcat+0x4>
 168:	11 97       	sbiw	r26, 0x01	; 1
 16a:	01 90       	ld	r0, Z+
 16c:	0d 92       	st	X+, r0
 16e:	00 20       	and	r0, r0
 170:	e1 f7       	brne	.-8      	; 0x16a <strcat+0xc>
 172:	08 95       	ret

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
